version: '3.8'

services:
  master:
    image: postgres:14-alpine
    container_name: master
#    user: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      PGOPTIONS: "-c postgres.slave.user=${POSTGRES_SLAVE_USER} -c postgres.slave.password=${POSTGRES_SLAVE_PASSWORD}"
    command: |
      postgres
      -c wal_level=replica
      -c max_wal_senders=10 
      -c max_replication_slots=10

    volumes:
      - ./initdb/master/init-master.sh:/docker-entrypoint-initdb.d/init-master.sh
      - master_data:/var/lib/postgresql/data



  slave:
    image: postgres:14-alpine
    container_name: slave
    user: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      PGUSER: ${POSTGRES_SLAVE_USER}
      PGPASSWORD: ${POSTGRES_SLAVE_PASSWORD}
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=master --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - master


volumes:
  master_data:


#    command: |
#      bash -c "
#      until pg_basebackup -h master -D /var/lib/postgresql/data -U ${POSTGRES_REPLICATION_USER} -Fp -Xs -P -R
#      do
#      echo 'Waiting for primary to connect...'
#      sleep 1
#      done

#      postgres
#      "